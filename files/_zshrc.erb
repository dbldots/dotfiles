export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

SHELL="<%= `which zsh`.strip %>"

<% home = `echo $HOME`.strip %>

<%
  default_user = begin
       print("shell user name: ")
       STDOUT.flush
       STDIN.gets.chomp
     end
%>
DEFAULT_USER="<%= default_user %>"
DEFAULT_USERNAME="<%= default_user %>"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)
fpath=( "$HOME/.zfunctions" $fpath )

<%
  zsh_theme = begin
       print("zsh theme (refined|kolo|agnoster|...): ")
       STDOUT.flush
       STDIN.gets.chomp
     end
%>

<% if zsh_theme == 'pure' %>
ZSH_THEME=""
source $ZSH/oh-my-zsh.sh
autoload -U promptinit; promptinit
prompt pure
<% else %>
ZSH_THEME="<%= zsh_theme %>"
source $ZSH/oh-my-zsh.sh
<% end %>

export GOPATH=$HOME/dev/dbldots/go

# Customize to your needs...
# export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin
export PATH=$PATH:./bin:$GOPATH/bin

# adds yarn global modules to path
export PATH="$PATH:$HOME/.config/yarn/global/node_modules/.bin"

alias ll="ls -l"
alias la="ls -a"
alias be="bundle exec"

# adding hub wrapper..
# eval "$(hub alias -s)"

export EDITOR=vim
export LESS=FaRMSiX
export PAGER=less

if [ -z "$DISPLAY" ]; then
  export DISPLAY="none"
fi

# autojump
# mac
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh
# ubuntu
[[ -s /usr/share/autojump/autojump.zsh ]] && source /usr/share/autojump/autojump.zsh

# chruby related..
<% if File.exist?("/usr/local/share/chruby/chruby.sh") %>
source /usr/local/share/chruby/chruby.sh
source /usr/local/share/chruby/auto.sh
<% elsif File.exist?("/usr/local/opt/chruby/share/chruby/chruby.sh") %>
source /usr/local/opt/chruby/share/chruby/chruby.sh
source /usr/local/opt/chruby/share/chruby/auto.sh
<% end %>
set shell=$SHELL

<% if File.exist?(File.join(home, '.nvm/nvm.sh')) %>
# nvm related
export NVM_DIR="<%= File.join(home, '.nvm/nvm.sh') %>"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
<% end %>

# cd to the top level git dir
a() {
  cd `git rev-parse --show-toplevel`
}

# to fix ssh key in re-attached tmux session after reconnect
fixssh() {
  eval $(tmux show-env | sed -n 's/^\(SSH_[^=]*\)=\(.*\)/export \1="\2"/p')
}

# to fix nfs issues on mac host
fixperms() {
  ls -alR > /dev/null
}

# junegunn/fzf, installed by vim plug
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
